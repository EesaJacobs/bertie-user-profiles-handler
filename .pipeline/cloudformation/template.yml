AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: ...

Parameters:
  ProjectName:
    Type: String
  ServiceName:
    Type: String
  Env:
    Type: String
  CodeBucket:
    Type: String
  CodeFile:
    Type: String

Resources:
  IamRoleLambda:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: ServiceName
          Value: !Ref ServiceName
        - Key: Environment
          Value: !Ref Env

  IamPolicyCloudWatchLogs:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: IamPolicyCloudWatchLogs
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${ServiceName}-${Env}:*
      Roles:
        - !Ref IamRoleLambda

  IamPolicyDynamoDbTableUsers:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: IamPolicyDynamoDbTableUsers
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:Query
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${Env}-${ProjectName}-user-profiles
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${Env}-${ProjectName}-user-profiles/*
      Roles:
        - !Ref IamRoleLambda

  Lambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${ServiceName}-${Env}
      Handler: lambda_function.lambda_handler
      Architectures:
        - x86_64
      Runtime: python3.12
      CodeUri:
        Bucket: !Ref CodeBucket
        Key: !Ref CodeFile
      Role: !GetAtt IamRoleLambda.Arn
      MemorySize: 128
      Timeout: 15
      Layers:
        - !Sub arn:aws:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPythonV3-python312-x86_64:2
        - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:python-v3-12-jwt:1
      Environment:
        Variables:
          AWS_ACCOUNT_ID: !Sub "${AWS::AccountId}"
          ENV: !Ref Env
      Tags:
        ProjectName: !Ref ProjectName
        ServiceName: !Ref ServiceName
        Environment: !Ref Env

  DynamoDbTableUserProfiles:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${Env}-${ProjectName}-user-profiles
      AttributeDefinitions:
        - AttributeName: email_address
          AttributeType: S
        - AttributeName: username
          AttributeType: S
      KeySchema:
        - AttributeName: email_address
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: !Sub username
          KeySchema:
            - AttributeName: username
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  SnsTopicUserChange:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${ProjectName}-user-change-${Env}
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: ServiceName
          Value: !Ref ServiceName
        - Key: Environment
          Value: !Ref Env

  SnsSubscriptionLambda:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref SnsTopicUserChange
      Protocol: lambda
      Endpoint: !GetAtt Lambda.Arn

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref Lambda
      Principal: sns.amazonaws.com
      SourceArn: !Ref SnsTopicUserChange

Outputs:
  LambdaArnOutput:
    Value: !GetAtt Lambda.Arn
    Export:
      Name: !Sub "${ServiceName}-arn-${Env}"
